AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  gopileface
  
  Sample SAM Template for gopileface

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5

Parameters:
  DynamoTableName :
    Type: String
    Default: GoPileFaceTable
    Description: name of the associated dynamodb table


Resources:

  APIPileFace:
    Type: AWS::Serverless::Api
    DependsOn: RoleForApiGatewayToInvokeDynamoDb
    Properties:
      StageName: UAT
      Name: PileOuFace
      MethodSettings:
        - DataTraceEnabled: true
          HttpMethod: "*"
          LoggingLevel: INFO
          ResourcePath: "/*"
          MetricsEnabled: true           
      DefinitionBody:
        'Fn::Transform':
          Name: 'AWS::Include'
          Parameters:
            Location: !Sub s3://edfx-rbn-pileface/swagger/pileface-go.yaml
      EndpointConfiguration: EDGE  

  DynamoTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: 
        Ref : DynamoTableName

  RegisterFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ../compute/register/
      Handler: handler
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html     
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          TableName:
            Ref : DynamoTableName
      Policies:
        - DynamoDBCrudPolicy: 
            TableName: 
              Ref : DynamoTableName

  BetFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ../compute/bet/
      Handler: handler
      Runtime: go1.x
      Tracing: Active # https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html     
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          TableName:
            Ref : DynamoTableName
      Policies:
        - DynamoDBCrudPolicy: 
            TableName: 
              Ref : DynamoTableName

  RoleForApiGatewayToInvokeDynamoDb:
    Type: 'AWS::IAM::Role'    
    Properties:
      RoleName: RoleForApiGatewayToInvokeDynamoDb
      AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - apigateway.amazonaws.com
              Action:
                - 'sts:AssumeRole'
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
      Policies:    
        - PolicyName: getDynamoDb
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'dynamoDb:getItem'
                Resource: !GetAtt DynamoTable.Arn

  LambdaPermissionLambdaRegister:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt RegisterFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ""
        - - "arn:aws:execute-api:"
          - !Ref AWS::Region
          - ":"
          - !Ref AWS::AccountId
          - ":"
          - !Ref APIPileFace
          - "/*"

  LambdaPermissionLambdaBet:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt BetFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ""
        - - "arn:aws:execute-api:"
          - !Ref AWS::Region
          - ":"
          - !Ref AWS::AccountId
          - ":"
          - !Ref APIPileFace
          - "/*"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  RegisterAPI:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${APIPileFace}.execute-api.${AWS::Region}.amazonaws.com/UAT/"
  RegisterFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt RegisterFunction.Arn
  RegisterFunctionIamRole:
    Description: "Implicit IAM Role created for Register function"
    Value: !GetAtt RegisterFunctionRole.Arn
